[{"type":"js","data":"/* Imports for global scope */\n\nServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\nActiveRoute = Package['zimme:active-route'].ActiveRoute;\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nLog = Package.logging.Log;\nRandom = Package.random.Random;\nEJSON = Package.ejson.EJSON;\nSpacebars = Package.spacebars.Spacebars;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nTags = Package['patrickleet:tags'].Tags;\nAccounts = Package['accounts-base'].Accounts;\nAccountsServer = Package['accounts-base'].AccountsServer;\nAccountsTemplates = Package['useraccounts:core'].AccountsTemplates;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nT9n = Package['softwarerero:accounts-t9n'].T9n;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){// Set up login services\nMeteor.startup(function() {\n  // Add Facebook configuration entry\n  /*\n  ServiceConfiguration.configurations.update(\n    { service: \"facebook\" },\n    { $set: {\n        appId: \"XXXXXXXXXXXXXXX\",\n        secret: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n      }\n    },\n    { upsert: true }\n  );\n  */\n\n  // Add GitHub configuration entry\n  /*\n  ServiceConfiguration.configurations.update(\n    { service: \"github\" },\n    { $set: {\n        clientId: \"XXXXXXXXXXXXXXXXXXXX\",\n        secret: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n      }\n    },\n    { upsert: true }\n  );\n  */\n\n  // Add Google configuration entry\n  ServiceConfiguration.configurations.update(\n    { service: \"google\" },\n    { $set: {\n        clientId: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n        client_email: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n        secret: \"XXXXXXXXXXXXXXXXXXXXXXXX\"\n      }\n    },\n    { upsert: true }\n  );\n\n  // Add Linkedin configuration entry\n  /*\n  ServiceConfiguration.configurations.update(\n    { service: \"linkedin\" },\n    { $set: {\n        clientId: \"XXXXXXXXXXXXXX\",\n        secret: \"XXXXXXXXXXXXXXXX\"\n      }\n    },\n    { upsert: true }\n  );\n  */\n});\n\n}).call(this);\n","servePath":"/server/lib/config/accounts.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/server/lib/config/accounts.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/server/lib/config/accounts.js","sourcesContent":["// Set up login services\nMeteor.startup(function() {\n  // Add Facebook configuration entry\n  /*\n  ServiceConfiguration.configurations.update(\n    { service: \"facebook\" },\n    { $set: {\n        appId: \"XXXXXXXXXXXXXXX\",\n        secret: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n      }\n    },\n    { upsert: true }\n  );\n  */\n\n  // Add GitHub configuration entry\n  /*\n  ServiceConfiguration.configurations.update(\n    { service: \"github\" },\n    { $set: {\n        clientId: \"XXXXXXXXXXXXXXXXXXXX\",\n        secret: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n      }\n    },\n    { upsert: true }\n  );\n  */\n\n  // Add Google configuration entry\n  ServiceConfiguration.configurations.update(\n    { service: \"google\" },\n    { $set: {\n        clientId: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n        client_email: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n        secret: \"XXXXXXXXXXXXXXXXXXXXXXXX\"\n      }\n    },\n    { upsert: true }\n  );\n\n  // Add Linkedin configuration entry\n  /*\n  ServiceConfiguration.configurations.update(\n    { service: \"linkedin\" },\n    { $set: {\n        clientId: \"XXXXXXXXXXXXXX\",\n        secret: \"XXXXXXXXXXXXXXXX\"\n      }\n    },\n    { upsert: true }\n  );\n  */\n});\n"]}},{"type":"js","data":"(function(){/*\nAccounts.emailTemplates.siteName = \"MySite\";\n\nAccounts.emailTemplates.from = \"MySite <support@mysite.com>\";\n\nAccounts.emailTemplates.resetPassword.subject = function (user) {\n    return \"Message for \" + user.profile.displayName;\n};\n\nAccounts.emailTemplates.resetPassword.text = function (user, url) {\n    var signature = \"MySite Bot\";\n    //var president = President.findOne();\n    //if (president)\n    //    president = Meteor.users.findOne(president.presidentId);\n    //    signature = president.profile.displayName + \", the MySite President.\";\n\n    return \"Dear \" + user.profile.displayName + \",\\n\\n\" +\n        \"Click the following link to set your new password:\\n\" +\n        url + \"\\n\\n\" +\n        \"Please never forget it again!!!\\n\\n\\n\" +\n        \"Cheers,\\n\" +\n        signature;\n};\n*/\n\n}).call(this);\n","servePath":"/server/lib/config/email.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/server/lib/config/email.js"],"names":[],"mappings":"cAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/server/lib/config/email.js","sourcesContent":["/*\nAccounts.emailTemplates.siteName = \"MySite\";\n\nAccounts.emailTemplates.from = \"MySite <support@mysite.com>\";\n\nAccounts.emailTemplates.resetPassword.subject = function (user) {\n    return \"Message for \" + user.profile.displayName;\n};\n\nAccounts.emailTemplates.resetPassword.text = function (user, url) {\n    var signature = \"MySite Bot\";\n    //var president = President.findOne();\n    //if (president)\n    //    president = Meteor.users.findOne(president.presidentId);\n    //    signature = president.profile.displayName + \", the MySite President.\";\n\n    return \"Dear \" + user.profile.displayName + \",\\n\\n\" +\n        \"Click the following link to set your new password:\\n\" +\n        url + \"\\n\\n\" +\n        \"Please never forget it again!!!\\n\\n\\n\" +\n        \"Cheers,\\n\" +\n        signature;\n};\n*/\n"]}},{"type":"js","data":"(function(){T9n.setLanguage('en');\n}).call(this);\n","servePath":"/lib/config/accounts_t9n.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/config/accounts_t9n.js"],"names":[],"mappings":"yBAAA,S","file":"/lib/config/accounts_t9n.js","sourcesContent":["T9n.setLanguage('en');"]}},{"type":"js","data":"(function(){\n// Options\nAccountsTemplates.configure({\n  defaultLayout: 'masterLayout',\n  defaultLayoutRegions: {\n    nav: 'nav',\n    footer: 'footer',\n  },\n  defaultContentRegion: 'main',\n  showForgotPasswordLink: true,\n  overrideLoginErrors: true,\n  enablePasswordChange: true,\n\n  // sendVerificationEmail: true,\n  // enforceEmailVerification: true,\n  //confirmPassword: true,\n  //continuousValidation: false,\n  //displayFormLabels: true,\n  //forbidClientAccountCreation: true,\n  //formValidationFeedback: true,\n  //homeRoutePath: '/',\n  //showAddRemoveServices: false,\n  //showPlaceholders: true,\n\n  negativeValidation: true,\n  positiveValidation: true,\n  negativeFeedback: false,\n  positiveFeedback: true,\n\n  // Privacy Policy and Terms of Use\n  //privacyUrl: 'privacy',\n  //termsUrl: 'terms-of-use',\n});\n\n}).call(this);\n","servePath":"/lib/config/at_config.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/config/at_config.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/lib/config/at_config.js","sourcesContent":["\n// Options\nAccountsTemplates.configure({\n  defaultLayout: 'masterLayout',\n  defaultLayoutRegions: {\n    nav: 'nav',\n    footer: 'footer',\n  },\n  defaultContentRegion: 'main',\n  showForgotPasswordLink: true,\n  overrideLoginErrors: true,\n  enablePasswordChange: true,\n\n  // sendVerificationEmail: true,\n  // enforceEmailVerification: true,\n  //confirmPassword: true,\n  //continuousValidation: false,\n  //displayFormLabels: true,\n  //forbidClientAccountCreation: true,\n  //formValidationFeedback: true,\n  //homeRoutePath: '/',\n  //showAddRemoveServices: false,\n  //showPlaceholders: true,\n\n  negativeValidation: true,\n  positiveValidation: true,\n  negativeFeedback: false,\n  positiveFeedback: true,\n\n  // Privacy Policy and Terms of Use\n  //privacyUrl: 'privacy',\n  //termsUrl: 'terms-of-use',\n});\n"]}},{"type":"js","data":"(function(){\nFlowRouter.route('/', {\n  name: \"home\",\n  action: function(params, queryParams) {\n    BlazeLayout.render('masterLayout', {\n      footer: \"footer\",\n      main: \"home\",\n      nav: \"nav\",\n    });\n  }\n});\n\nFlowRouter.route('/private', {\n  name: \"private\",\n  triggersEnter: [AccountsTemplates.ensureSignedIn],\n  action: function(params, queryParams) {\n    BlazeLayout.render('masterLayout', {\n      footer: \"footer\",\n      main: \"private\",\n      nav: \"nav\",\n    });\n  }\n});\n\nFlowRouter.route('/blog', {\n  name: \"private\",\n  triggersEnter: [AccountsTemplates.ensureSignedIn],\n  action: function(params, queryParams) {\n    BlazeLayout.render('masterLayout', {\n      footer: \"footer\",\n      main: \"blogCreate\",\n      nav: \"nav\",\n    });\n  }\n});\n\nFlowRouter.route('/list', {\n  name: \"listBlogs\",\n  triggersEnter: [AccountsTemplates.ensureSignedIn],\n  action: function(params, queryParams) {\n    BlazeLayout.render('masterLayout', {\n      footer: \"footer\",\n      main: \"list-blogs\",\n      nav: \"nav\",\n    });\n  }\n});\n\n\n\n\nFlowRouter.notFound = {\n  action: function() {\n    BlazeLayout.render('masterLayout', {\n      footer: \"footer\",\n      main: \"pageNotFound\",\n      nav: \"nav\",\n    });\n  }\n};\n\n\n//Routes\nAccountsTemplates.configureRoute('changePwd');\nAccountsTemplates.configureRoute('forgotPwd');\nAccountsTemplates.configureRoute('resetPwd');\nAccountsTemplates.configureRoute('signIn');\nAccountsTemplates.configureRoute('signUp');\nAccountsTemplates.configureRoute('verifyEmail');\n\n}).call(this);\n","servePath":"/lib/router/routes.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/router/routes.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/lib/router/routes.js","sourcesContent":["\nFlowRouter.route('/', {\n  name: \"home\",\n  action: function(params, queryParams) {\n    BlazeLayout.render('masterLayout', {\n      footer: \"footer\",\n      main: \"home\",\n      nav: \"nav\",\n    });\n  }\n});\n\nFlowRouter.route('/private', {\n  name: \"private\",\n  triggersEnter: [AccountsTemplates.ensureSignedIn],\n  action: function(params, queryParams) {\n    BlazeLayout.render('masterLayout', {\n      footer: \"footer\",\n      main: \"private\",\n      nav: \"nav\",\n    });\n  }\n});\n\nFlowRouter.route('/blog', {\n  name: \"private\",\n  triggersEnter: [AccountsTemplates.ensureSignedIn],\n  action: function(params, queryParams) {\n    BlazeLayout.render('masterLayout', {\n      footer: \"footer\",\n      main: \"blogCreate\",\n      nav: \"nav\",\n    });\n  }\n});\n\nFlowRouter.route('/list', {\n  name: \"listBlogs\",\n  triggersEnter: [AccountsTemplates.ensureSignedIn],\n  action: function(params, queryParams) {\n    BlazeLayout.render('masterLayout', {\n      footer: \"footer\",\n      main: \"list-blogs\",\n      nav: \"nav\",\n    });\n  }\n});\n\n\n\n\nFlowRouter.notFound = {\n  action: function() {\n    BlazeLayout.render('masterLayout', {\n      footer: \"footer\",\n      main: \"pageNotFound\",\n      nav: \"nav\",\n    });\n  }\n};\n\n\n//Routes\nAccountsTemplates.configureRoute('changePwd');\nAccountsTemplates.configureRoute('forgotPwd');\nAccountsTemplates.configureRoute('resetPwd');\nAccountsTemplates.configureRoute('signIn');\nAccountsTemplates.configureRoute('signUp');\nAccountsTemplates.configureRoute('verifyEmail');\n"]}},{"type":"js","data":"(function(){Items = new Meteor.Collection('items');\nTags.TagsMixin(Items);\n\nItems.allowTags(function() {\n  return true;\n})\n}).call(this);\n","servePath":"/lib/common.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/common.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA,E","file":"/lib/common.js","sourcesContent":["Items = new Meteor.Collection('items');\nTags.TagsMixin(Items);\n\nItems.allowTags(function() {\n  return true;\n})"]}},{"type":"js","data":"(function(){if(Items.find().count() === 0) {\n  Items.insert({\n    name: \"Foo Bar\",\n    age: 21\n  });\n}\n}).call(this);\n","servePath":"/server/app.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/server/app.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA,C","file":"/server/app.js","sourcesContent":["if(Items.find().count() === 0) {\n  Items.insert({\n    name: \"Foo Bar\",\n    age: 21\n  });\n}"]}}]