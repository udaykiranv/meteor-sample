{"version":3,"sources":["meteor://ðŸ’»app/server/blogs.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/server/blogs.js","sourcesContent":["Meteor.methods({\n  'submitPost': function(blogId, title, instrument, technique, timeframe, price, stoploss, target, tags, userId, username) {\n    var now = new Date();\n    if (blogId) {\n      Blogs.update({_id: blogId}, {$set: {title: title, instrument: instrument, price: price, stoploss: stoploss, target : target, technique: technique , timeframe : timeframe, \"last_updated_at\": now, \"username\": username}});\n    } else {\n      var data = Blogs.insert({title: title, instrument: instrument, technique: technique , timeframe : timeframe, price: price, stoploss: stoploss, target : target, \"created_at\": now, \"last_updated_at\": now, \"username\": username , \"userId\" : userId} , function(err, result) {\n        var blogId = result;\n        for(i = 0 ; i < tags.length ; i++) {\n          Blogs.addTag(tags[i] , { _id: blogId });\n        }\n      });\n    }\n  }\n});\n\n\nMeteor.methods({\n  'watchListUnReadCount' : function(userId) {\n    var pipeline = [\n      { $match : {userId : userId}} , {$group: {_id : null, total: {$sum: \"$unreadcount\"}}}\n    ];\n    var result = WatchList.aggregate(pipeline);\n    return result[0].total;\n\n  } ,\n  'importantUnReadCount' : function(userId) {\n\n    var pipeline = [\n      { $match : {userId : userId}} , {$group: {_id : null, total: {$sum: \"$unreadcount\"}}}\n    ];\n    var result = Important.aggregate(pipeline);\n\n    if(result){\n      return result[0].total;\n    }\n    return 0;\n\n  },\n  'mytradeUnReadCount' : function(userId) {\n    var pipeline = [\n      { $match : {userId : userId}} , {$group: {_id : null, total: {$sum: \"$unreadcount\"}}}\n    ];\n    var result = MyTrades.aggregate(pipeline);\n    if(result)\n    return result[0].total;\n    else\n    return 0;\n\n  }\n});\n\nMeteor.methods({\n  'getBlogs': function() {\n    return Blogs.find();\n  }\n});\n\n\n\nMeteor.methods({\n  'addToWatchList': function(blogId, userId) {\n    WatchList.insert({blogId: blogId, userId: userId});\n  },\n  'addToImportantList': function(blogId, userId) {\n    Important.insert({blogId: blogId, userId: userId});\n  },\n  'addToMyTradesList': function(blogId, userId) {\n    MyTrades.insert({blogId: blogId, userId: userId});\n  }});\n\nMeteor.methods({\n  'addComment': function(blogId, comment, username) {\n  var now = new Date();\n    console.log(\"Blog Id \" + blogId);\n    Comments.insert({blogId: blogId, comment: comment,  \"created_at\": now, \"username\": username});\n    WatchList.update({blogId: blogId}, {$inc: {unreadcount : 1}}, { multi: true });\n    Important.update({blogId: blogId}, {$inc: {unreadcount : 1}}, { multi: true });\n    MyTrades.update({blogId: blogId}, {$inc: {unreadcount : 1}}, { multi: true });\n  }\n});\n\nMeteor.startup(function() {\n\n  Tags.mixin(Blogs);\n\n});"]}